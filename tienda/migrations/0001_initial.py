# Generated by Django 5.2.3 on 2025-06-28 17:43

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(help_text='Identificador único sin espacios (ej: consola, juego)', unique=True)),
                ('icono', models.CharField(blank=True, help_text="Clase de ícono (ej: 'mdi:gamepad-variant')", max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='DescripcionProducto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo_superior', models.CharField(blank=True, help_text='Texto pequeño superior (Ej: Consola de videojuegos)', max_length=100)),
                ('titulo_personalizado', models.CharField(blank=True, help_text='Título principal grande (Ej: PlayStation 5 Edición Digital)', max_length=100)),
                ('subtitulo', models.CharField(blank=True, max_length=255)),
                ('caracteristicas', models.TextField(blank=True, help_text='HTML con íconos y características destacadas')),
                ('descripcion_larga', models.TextField(blank=True, help_text='Texto completo con beneficios y detalles. Usa doble enter para párrafos.')),
                ('accesorios', models.TextField(blank=True, help_text='Accesorios compatibles u opcionales. Usa doble enter para separar líneas')),
                ('video_url', models.URLField(blank=True, help_text='URL del video de YouTube o demostración')),
            ],
            options={
                'verbose_name': 'Descripción avanzada',
                'verbose_name_plural': 'Descripciones de productos',
            },
        ),
        migrations.CreateModel(
            name='EspecificacionProducto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(help_text='Ej: Procesador, Memoria, Resolución', max_length=100)),
                ('valor', models.CharField(help_text='Ej: AMD Ryzen 5, 1TB SSD, 4K HDR', max_length=255)),
                ('descripcion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='especificaciones', to='tienda.descripcionproducto')),
            ],
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.CharField(help_text='Descripción breve para mostrar en la tarjeta del producto', max_length=150)),
                ('precio', models.DecimalField(decimal_places=2, help_text='Precio del producto o versión principal', max_digits=10)),
                ('precio_antiguo', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sku', models.CharField(help_text='Código único de esta versión estándar', max_length=100)),
                ('nombre_variante_estandar', models.CharField(blank=True, help_text='Nombre de la variante estándar. Ej: 512GB estándar, Edición base', max_length=100)),
                ('stock', models.CharField(help_text='Ej: En stock, Últimas 3 unidades, Agotado', max_length=100)),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='productos/')),
                ('etiqueta', models.CharField(blank=True, help_text='Ej: Nuevo, Oferta, Más vendido', max_length=50)),
                ('slug', models.SlugField(blank=True, help_text='URL única para cada producto', unique=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tienda.categoria')),
            ],
        ),
        migrations.CreateModel(
            name='ImagenProducto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='galeria/')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='galeria', to='tienda.producto')),
            ],
        ),
        migrations.AddField(
            model_name='descripcionproducto',
            name='producto',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='detalle', to='tienda.producto'),
        ),
        migrations.CreateModel(
            name='VarianteProducto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Ej: 1TB Edición especial, Azul', max_length=100)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=10)),
                ('precio_antiguo', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sku', models.CharField(help_text='Código único de esta variante (visible o interno)', max_length=100)),
                ('descripcion', models.ForeignKey(help_text='Relación con descripción avanzada del producto', on_delete=django.db.models.deletion.CASCADE, related_name='variantes', to='tienda.descripcionproducto')),
            ],
        ),
    ]
